---
- name: Create instance master
  os_server:
    state: "{{ state }}"
    name: "{{ instance.name1 }}"
    # Ubuntu 18.04 LTS (Bionic) amd64 (pre-installed murano-agent with Docker)
    image: "{{ instance.image }}"
    key_name: "{{ instance.key_name }}"
    wait: yes
    availability_zone: "{{ instance.availability_zone }}"
    flavor: "{{ instance.flavor }}"
    network: "{{ instance.network }}"
    auto_floating_ip: yes
    security_groups: ["couchdb","http","ssh"]
  register: server1



- name: Create instance2
  os_server:
    state: "{{ state }}"
    name: "{{ instance.name2 }}"
    # Ubuntu 18.04 LTS (Bionic) amd64 (pre-installed murano-agent with Docker)
    image: "{{ instance.image }}"
    key_name: "{{ instance.key_name }}"
    wait: yes
    availability_zone: "{{ instance.availability_zone }}"
    flavor: "{{ instance.flavor }}"
    network: "{{ instance.network }}"
    auto_floating_ip: yes
    security_groups: ["couchdb","http","ssh"]
  register: server2


- name: Create instance3
  os_server:
    state: "{{ state }}"
    name: "{{ instance.name3 }}"
    # Ubuntu 18.04 LTS (Bionic) amd64 (pre-installed murano-agent with Docker)
    image: "{{ instance.image }}"
    key_name: "{{ instance.key_name }}"
    wait: yes
    availability_zone: "{{ instance.availability_zone }}"
    flavor: "{{ instance.flavor }}"
    network: "{{ instance.network }}"
    auto_floating_ip: yes
    security_groups: ["couchdb","http","ssh"]
  register: server3



- name: Create instance4
  os_server:
    state: "{{ state }}"
    name: "{{ instance.name4 }}"
    # Ubuntu 18.04 LTS (Bionic) amd64 (pre-installed murano-agent with Docker)
    image: "{{ instance.image }}"
    key_name: "{{ instance.key_name }}"
    wait: yes
    availability_zone: "{{ instance.availability_zone }}"
    flavor: "{{ instance.flavor }}"
    network: "{{ instance.network }}"
    auto_floating_ip: yes
    security_groups: ["couchdb","http","ssh"]
  register: server4



- name: create volume for master
  os_volume:
    state: "{{ state }}"
    availability_zone: "{{ instance.availability_zone }}"
    size: "{{ volume.volume_size_master }}"
    display_name: "{{ volume.name1 }}"


- name: create volume for slave
  os_volume:
    state: "{{ state }}"
    availability_zone: "{{ instance.availability_zone }}"
    size: "{{ volume.volume_size_slave }}"
    display_name: "{{ item }}"
  with_items:
    - "{{ volume.name2 }}"
    - "{{ volume.name3 }}"
    - "{{ volume.name4 }}"

- name: attach volume
  os_server_volume:
    state: "{{ state }}"
    server: "{{ item.servername }}"
    volume: "{{ item.volumename }}"
    device: /dev/vdb
  with_items:
    - servername: "{{ instance.name1 }}"
      volumename: "{{ volume.name1 }}"
    - servername: "{{ instance.name2 }}"
      volumename: "{{ volume.name2 }}"
    - servername: "{{ instance.name3 }}"
      volumename: "{{ volume.name3 }}"
    - servername: "{{ instance.name4 }}"
      volumename: "{{ volume.name4 }}"


- name: add hosts to inventory
  become: yes
  lineinfile:
    state: "{{ state }}"
    path: /etc/ansible/hosts
    line: '{{ item }}'
  with_items:
    - "[master]"
    - "{{ server1.openstack.public_v4 }} ansible_ssh_private_key_file={{ instance.key_file_path }}"
    - "[slave1]"
    - "{{ server2.openstack.public_v4 }} ansible_ssh_private_key_file={{ instance.key_file_path }}"
    - "[slave2]"
    - "{{ server3.openstack.public_v4 }} ansible_ssh_private_key_file={{ instance.key_file_path }}"
    - "[slave3]"
    - "{{ server4.openstack.public_v4 }} ansible_ssh_private_key_file={{ instance.key_file_path }}"


- name: change host_key_checking to false
  become: yes
  lineinfile:
    insertafter: '^[defaults]'
    path: /etc/ansible/ansible.cfg
    state: present
    line: host_key_checking = False


- name: add hosts to vars 
  become: yes
  lineinfile:
    state: "{{ state }}"
    path: "{{ playbook_dir }}/vars/vm_settings.yml"
    line: '{{ item }}'
  with_items:
    - "master_IP: {{ server1.openstack.public_v4 }}"
    - "slave1_IP: {{ server2.openstack.public_v4 }}"
    - "slave2_IP: {{ server3.openstack.public_v4 }}"
    - "slave3_IP: {{ server4.openstack.public_v4 }}"


- debug:
    msg: "IP address of master: {{ server1.openstack.public_v4 }}"

- debug:
    msg: "IP address of slave1: {{ server2.openstack.public_v4 }}"

- debug:
    msg: "IP address of slave2: {{ server3.openstack.public_v4 }}"

- debug:
    msg: "IP address of slave3: {{ server4.openstack.public_v4 }}"


